Створили шаблоний клас Plural,для роботи з множинами. Ми вибрали реалізовувати множини через масиви.
Його основні функціональності:

Конструктори та деструктор:
Базовий конструктор створює масив із початковим розміром.
Конструктор копіювання для створення копії існуючої множини.
Конструктор з одним елементом.
Конструктор з масиву.
Деструктор для видалення динамічно розміщених елементів.

Оператор присвоєння:
Гарантує правильне копіювання об'єктів множини, у тому числі самоприсвоєння.

Методи для роботи з елементами:
add для додавання нових елементів.
addRange для додавання декількох елементів із масиву.
remove для видалення елемента.
clear для очищення множини.
size для отримання кількості елементів.
contain для перевірки наявності елемента у множині.
to_array для отримання масиву елементів.

Методи для роботи зі множинами:
set_union для отримання об'єднання з іншою множиною.
intersect для отримання перетину з іншою множиною.
difference для визначення різниці з іншою множиною.

Допоміжні методи:
printOn та перевантажений оператор виводу .

////////////////////////////////////////////////////////////////////////////////////////
Виконана робота кожним учасником:
Дурко Ростислав писав :functions.h
Борисюк Костянтин писав: main.cpp
Барабалюк Владислав писав: UnitTestingPlural
Левицький Микола редагував: test i main